version: '3'

networks:
  webnetwork:
    driver: bridge

services:
  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    networks:
      - webnetwork

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      VIRTUAL_HOST: ${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    volumes:
      - wp_data:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - webnetwork
    restart: always
    command: >
      /bin/sh -c '
        apt-get update &&
        apt-get install -y less libzip-dev libicu-dev libpng-dev unzip &&
        docker-php-ext-configure zip &&
        docker-php-ext-install zip intl gd &&
        curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar &&
        chmod +x wp-cli.phar &&
        mv wp-cli.phar /usr/local/bin/wp &&
        until wp db check --path=/var/www/html --allow-root; do sleep 5; done &&
        wp theme install ${WP_THEME} --activate --path=/var/www/html --allow-root &&
        wp plugin install ${WP_PLUGINS} --activate --path=/var/www/html --allow-root
      '

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - ./custom_cache.conf:/etc/nginx/conf.d/custom_cache.conf:ro
      - ./nginx.tmpl:/app/nginx.tmpl:ro
    environment:
      DEFAULT_HOST: ${DEFAULT_HOST}
    restart: always
    networks:
      - webnetwork

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: always
    networks:
      - webnetwork

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300
    restart: always
    networks:
      - webnetwork

volumes:
  db_data:
  wp_data:
  certs:
  vhost:
  html:
